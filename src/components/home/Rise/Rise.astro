---
import { Image } from "astro:assets";

import rise from "./rise.gif";
import rise_attack from "./rise_attack.gif";
import rise_clumsy from "./rise_clumsy.gif";
import rise_crouch from "./rise_crouch.gif";
import rise_owo from "./rise_owo.gif";
---

<div class="w-full h-[380px]"></div>

<Image
  id="rise"
  src={rise}
  alt="Rise Kujikawa"
  class="z-30 cursor-pointer absolute m-auto"
/>

<Image
  id="rise_attack"
  src={rise_attack}
  alt="Rise Kujikawa Attack"
  class="hidden -mt-16 mr-12 scale-150 z-30 cursor-pointer absolute m-auto"
/>

<Image
  id="rise_clumsy"
  src={rise_clumsy}
  alt="Rise Kujikawa Clumsy"
  class="hidden mt-8 z-30 scale-110 cursor-pointer absolute m-auto"
/>

<Image
  id="rise_crouch"
  src={rise_crouch}
  alt="Rise Kujikawa Crouch"
  class="hidden mt-24 z-30 cursor-pointer absolute m-auto"
/>

<Image
  id="rise_owo"
  src={rise_owo}
  alt="Rise Kujikawa OwO"
  class="hidden z-30 cursor-pointer absolute m-auto"
/>

<script>
  const elements = {
    rise: document.getElementById("rise") as HTMLImageElement,
    rise_attack: document.getElementById("rise_attack") as HTMLImageElement,
    rise_clumsy: document.getElementById("rise_clumsy") as HTMLImageElement,
    rise_crouch: document.getElementById("rise_crouch") as HTMLImageElement,
    rise_owo: document.getElementById("rise_owo") as HTMLImageElement,
  } as const;

  function pick_target(): [string, number] {
    const rand = Math.random();

    switch (true) {
      case rand < 0.4:
        return ["rise_clumsy", 1000];
      case rand < 0.7:
        return ["rise_crouch", 1000];
      case rand < 0.9:
        return ["rise_attack", 1000];
      default:
        return ["rise_owo", 2000];
    }
  }

  let timeout: number | null = null;

  for (const el of Object.values(elements)) {
    el.addEventListener("click", () => {
      if (timeout !== null) {
        clearTimeout(timeout);
      }

      const [target, duration] = pick_target();

      for (const e of Object.values(elements)) {
        if (e.id === target) {
          e.classList.remove("hidden");

          // Reset the animation
          const url = e.src;
          e.src = "";
          e.src = url;
        } else {
          e.classList.add("hidden");
        }
      }

      timeout = setTimeout(() => {
        for (const e of Object.values(elements)) {
          if (e.id === "rise") {
            e.classList.remove("hidden");
          } else {
            e.classList.add("hidden");
          }
        }
      }, duration);
    });
  }
</script>
